openapi: 3.0.1
info:
  title: CodeBlurb API
  version: v0.1
servers:
  - url: https://api.bence.kovacs.host
    description: Temporary server url
paths:
  /shopping/add-item/{shoppingCartItem}:
    post:
      tags:
        - Shopping
      operationId: addItemToShoppingCart
      parameters:
        - name: shoppingCartItem
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ShoppingCartResponse'
        "400":
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /payments/checkout:
    post:
      tags:
        - Payment
      operationId: pay
      responses:
        "200":
          description: OK
  /content/quiz/solution/{contentId}:
    post:
      tags:
        - Content
      operationId: checkSolutionForQuiz
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizSolutionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuizSolutionResponse'
  /content/code/solution/{contentId}:
    post:
      tags:
        - Content
      operationId: runSolutionFor
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeSolutionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CodeSolutionResponse'
        "400":
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /content/code/code-quiz-solution/{contentId}:
    post:
      tags:
        - Content
      operationId: checkCodeQuizSolutionFor
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeQuizSolutionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CodeQuizSolutionResponse'
        "400":
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/register:
    post:
      tags:
        - Authentication
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh:
    post:
      tags:
        - Authentication
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
        "400":
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      tags:
        - Authentication
      operationId: logout
      responses:
        "200":
          description: OK
  /auth/login:
    post:
      tags:
        - Authentication
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LoginResponse'
        "400":
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/force-logout:
    post:
      tags:
        - Authentication
      operationId: forceLogout
      responses:
        "200":
          description: OK
  /shopping/restore-shopping-cart:
    get:
      tags:
        - Shopping
      operationId: restoreShoppingCart
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ShoppingCartResponse'
  /shopping/available-shopping-items:
    get:
      tags:
        - Shopping
      operationId: getAvailableShoppingItems
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/GetAvailableShoppingItemsResponse'
  /payments:
    get:
      tags:
        - Payment
      operationId: getPreviousPayments
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PreviousPaymentsResponse'
  /content/my-content-bundles:
    get:
      tags:
        - Content
      operationId: getMyContentBundles
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MyContentBundlesResponse'
  /shopping/delete-item/{shoppingCartItem}:
    delete:
      tags:
        - Shopping
      operationId: removeItemFromShoppingCart
      parameters:
        - name: shoppingCartItem
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ShoppingCartResponse'
components:
  schemas:
    MinimalContentBundleResponse:
      type: object
      properties:
        includedContent:
          type: array
          items:
            $ref: '#/components/schemas/MinimalContentResponse'
    MinimalContentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        contentType:
          type: string
          enum:
            - CODING
            - VIDEO
            - QUIZ
    ContentBundleResponse:
      type: object
      properties:
        includedContent:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/VideoContentResponse'
              - $ref: '#/components/schemas/QuizContentResponse'
              - $ref: '#/components/schemas/CodingContentResponse'
    ContentResponse:
      type: object
      properties:
        name:
          type: string
    QuizContentResponse:
      allOf:
        - $ref: '#/components/schemas/ContentResponse'
        - type: object
          properties:
            id:
              type: integer
              format: int32
            contentType:
              type: string
              enum:
                - QUIZ
            questions:
              type: array
              items:
                $ref: '#/components/schemas/QuizQuestionResponse'
    QuizQuestionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        question:
          type: string
        answers:
          type: array
          items:
            type: string
        solutionIndex:
          type: integer
          format: int32
        solutionChar:
          type: string
          minLength: 1
          maxLength: 1
    CodingContentResponse:
      allOf:
        - $ref: '#/components/schemas/ContentResponse'
        - type: object
          properties:
            id:
              type: integer
              format: int32
            contentType:
              type: string
              enum:
                - CODING
            description:
              type: string
            codeSkeleton:
              type: array
              items:
                type: string
            codeSnippets:
              type: array
              items:
                type: string
            testCases:
              type: array
              items:
                $ref: '#/components/schemas/TestCaseResponse'
            codingContentType:
              type: string
              enum:
                - SCRATCH
                - DRAG_AND_DROP
                - FILL_THE_GAP
    TestCaseResponse:
      type: object
      properties:
        input:
          type: string
        expectedOutput:
          type: string
    VideoContentResponse:
      allOf:
        - $ref: '#/components/schemas/ContentResponse'
        - type: object
          properties:
            contentType:
              type: string
              enum:
                - VIDEO
            description:
              type: string
            resourceUrl:
              type: string
    ShoppingCartResponse:
      type: object
      properties:
        shoppingItems:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingItemResponse'
    ShoppingItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        price:
          type: number
          format: double
        contentBundle:
          $ref: '#/components/schemas/MinimalContentBundleResponse'
    QuizSolutionRequest:
      required:
        - solutions
      type: object
      properties:
        solutions:
          type: object
          additionalProperties:
            type: integer
            format: int32
    IncorrectQuizSolutionResponse:
      type: object
      properties:
        incorrectQuestionId:
          type: integer
          format: int32
        incorrectSolutionSent:
          type: integer
          format: int32
        correctSolution:
          type: integer
          format: int32
    QuizSolutionResponse:
      type: object
      properties:
        correctAnswerQuestionIds:
          type: array
          items:
            type: integer
            format: int32
        incorrectSolutions:
          type: array
          items:
            $ref: '#/components/schemas/IncorrectQuizSolutionResponse'
    CodeSolutionRequest:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 32768
          minLength: 0
          type: string
    CodeSolutionResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseOutcomeResponse'
        overallResult:
          type: string
          enum:
            - ALL_PASSED
            - TESTCASES_FAILED
    TestCaseOutcomeResponse:
      type: object
      properties:
        expected:
          type: string
        actual:
          type: string
        outcome:
          type: string
          enum:
            - PASSED
            - FAILED
        hints:
          type: array
          items:
            type: string
    CodeQuizSolutionRequest:
      required:
        - solutionsByIndex
      type: object
      properties:
        solutionsByIndex:
          type: object
          additionalProperties:
            type: string
    CodeQuizSolutionResponse:
      type: object
      properties:
        correctAnswerIndices:
          type: array
          items:
            type: integer
            format: int32
        incorrectSolutions:
          type: array
          items:
            $ref: '#/components/schemas/IncorrectCodeQuizSolutionResponse'
    IncorrectCodeQuizSolutionResponse:
      type: object
      properties:
        incorrectSolutionIndex:
          type: integer
          format: int32
        incorrectAnswer:
          type: string
        correctSolution:
          type: string
    RegisterRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 4
          type: string
        password:
          maxLength: 60
          minLength: 8
          type: string
    RefreshTokenRequest:
      required:
        - refreshToken
      type: object
      properties:
        refreshToken:
          type: string
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 4
          type: string
        password:
          maxLength: 60
          minLength: 8
          type: string
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    GetAvailableShoppingItemsResponse:
      type: object
      properties:
        shoppingItems:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingItemResponse'
    PaymentResponse:
      type: object
      properties:
        pricePayed:
          type: number
          format: double
        boughtContentBundles:
          type: array
          items:
            $ref: '#/components/schemas/ContentBundleResponse'
    PreviousPaymentsResponse:
      type: object
      properties:
        previousPayments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentResponse'
    MyContentBundlesResponse:
      type: object
      properties:
        contentBundles:
          type: array
          items:
            $ref: '#/components/schemas/ContentBundleResponse'
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
